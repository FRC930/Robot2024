{
  "version": 1.0,
  "waypoints": [
    {
      "anchor": {
        "x": 1.4194171612308972,
        "y": 7.647176264395325
      },
      "prevControl": null,
      "nextControl": {
        "x": 2.21575404634404,
        "y": 7.658887100941107
      },
      "isLocked": false,
      "linkedName": null
    },
    {
      "anchor": {
        "x": 4.38225880731362,
        "y": 7.4949353893001645
      },
      "prevControl": {
        "x": 3.0934259962927344,
        "y": 7.667827595656624
      },
      "nextControl": {
        "x": 5.3425474040677035,
        "y": 7.366116187296568
      },
      "isLocked": false,
      "linkedName": null
    },
    {
      "anchor": {
        "x": 7.33338961685056,
        "y": 7.108477783289376
      },
      "prevControl": {
        "x": 5.365969077159265,
        "y": 7.120188619835157
      },
      "nextControl": null,
      "isLocked": false,
      "linkedName": null
    }
  ],
  "rotationTargets": [],
  "constraintZones": [],
  "eventMarkers": [
    {
      "name": "Intake",
      "waypointRelativePos": 1.1,
      "command": {
        "type": "parallel",
        "data": {
          "commands": [
            {
              "type": "named",
              "data": {
                "name": "intake"
              }
            }
          ]
        }
      }
    },
    {
      "name": "stopShoot",
      "waypointRelativePos": 0,
      "command": {
        "type": "parallel",
        "data": {
          "commands": [
            {
              "type": "named",
              "data": {
                "name": "stopShoot"
              }
            }
          ]
        }
      }
    }
  ],
  "globalConstraints": {
    "maxVelocity": 6.0,
    "maxAcceleration": 5.0,
    "maxAngularVelocity": 540.0,
    "maxAngularAcceleration": 720.0
  },
  "goalEndState": {
    "velocity": 3.0,
    "rotation": 180.0,
    "rotateFast": false
  },
  "reversed": false,
  "folder": "AmpSkipY",
  "previewStartingState": {
    "rotation": 180.0,
    "velocity": 0
  },
  "useDefaultConstraints": false
}